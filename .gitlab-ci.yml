image: patgrosse/riotsensors-build
stages:
  - prepare
  - cmake
  - buildProtocol
  - build
  - test
  - buildServer
  - docs
  - deploy
#cache:
#  key: "$CI_BUILD_REF_NAME"
#  paths:
#    - lib/gcc-arm-none-eabi-6_2-2016q4-20161216-linux.tar.bz2
before_script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - 'eval $(ssh-agent -s)'
  - 'ssh-add <(echo "$SSH_PRIVATE_KEY")'
  - 'mkdir -p ~/.ssh'
  - 'echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
getlibs:
  variables:
    GIT_STRATEGY: clone
  stage: prepare
  script:
    - "./prebuild.sh"
  artifacts:
    paths:
    - lib/
cmake:
  stage: cmake
  dependencies:
    - getlibs
  script:
    - "mkdir -p build"
    - "cd build"
    - "cmake .."
  artifacts:
    paths:
    - build/
build:protocol:
  stage: buildProtocol
  dependencies:
    - cmake
    - getlibs
  script:
    - "cd build/protocol"
    - "make"
  artifacts:
    paths:
    - build/
build:RIOTmodule:
  stage: build
  dependencies:
    - getlibs
    - build:protocol
  script:
    - "cd build/riotmodule"
    - "make"
  artifacts:
    paths:
    - build/
build:linuxconnector:
  stage: build
  dependencies:
    - getlibs
    - build:protocol
  script:
    - "cd build/linuxconnector"
    - "make"
  artifacts:
    paths:
    - build/
build:restserver:
  stage: buildServer
  dependencies:
    - getlibs
    - build:linuxconnector
  script:
    - "cd build/restserver"
    - "make"
  artifacts:
    paths:
    - build/
test:protocol:
  stage: test
  dependencies:
    - build:protocol
  script:
    - "cd build/protocol/tests"
    - "./protocol_tests"
test:RIOTmodule:
  stage: test
  dependencies:
    - build:RIOTmodule
  script:
    - "cd build/riotmodule/tests"
    - "./riot_tests"
test:linuxconnector:
  stage: test
  dependencies:
    - build:linuxconnector
  script:
    - "cd build/linuxconnector/tests"
    - "./linux_tests"
doxygenDocs:
  stage: docs
  dependencies: []
  before_script: []
  image: iimuz/doxygen
  when: always
  script:
    - "mkdir -p build/doxygen"
    - "doxygen Doxyfile"
  artifacts:
    paths:
      - "build/doxygen"
swaggerDocs:
  stage: docs
  dependencies: []
  before_script: []
  image: openjdk:alpine
  when: always
  script:
    - "mkdir -p build/swagger"
    - "apk update"
    - "apk add ca-certificates"
    - "update-ca-certificates"
    - "apk --no-cache add openssl"
    - "wget https://oss.sonatype.org/content/repositories/releases/io/swagger/swagger-codegen-cli/2.2.1/swagger-codegen-cli-2.2.1.jar"
    - "java -jar swagger-codegen-cli-2.2.1.jar generate -i restserver/swagger.yml -l html2 -o build/swagger"
  artifacts:
    paths:
      - "build/swagger"
pages:
  stage: deploy
  dependencies:
    - doxygenDocs
    - swaggerDocs
  before_script: []
  script:
    - "rm -rf public"
    - "mkdir -p public"
    - "cp -r docs/* public"
    - "mkdir -p public/doxygen"
    - "cp -r build/doxygen/html/* public/doxygen"
    - "mkdir -p public/swagger"
    - "cp -r build/swagger/* public/swagger"
  artifacts:
    paths:
    - public
  only:
  - master